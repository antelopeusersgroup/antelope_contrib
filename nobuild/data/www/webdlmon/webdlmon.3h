.TH WEBDLMON 3H 2007/06/25 "Antelope Contrib SW" "User Commands"

.SH NAME
webdlmon \- monitor digitizers through a web interface

.SH DESCRIPTION
\fBwebdlmon\fP provides a web interface for monitoring a set 
of digitizers receiving data through various acquistion programs.
The datalogger status is monitored through a regular dump of
special ORB packets (".*/pf/st") to eXtensible Markup Language
(XML) files created by \fIorbdlstat2xml\fP. 

A summary XML file, webdlmon.xml, points to these XML files, which 
are then transformed by an eXtensible Stylesheet Language (XSL) processor 
such as Saxon and an XSL transformation stylesheet, webdlmon.xsl, running as a cron job. 
The transformation rules in webdlmon.xsl create a more semantic XML file, with the 
dataloggers sorted in a similar fashion to \fIdlmon\fP. \fBwebdlmon\fP parses 
the new XML file, displaying a similar interface as \fIdlmon\fP.

.SH "MAIN DISPLAY INTERACTION"
The output of \fBwebdlmon\fP is essentially an interactive 
HyperText Markup Language (HTML) table. Column headings are 
gathered from the standard \fIdlmon\fP parameter file, and are
clickable. Clicking a column heading either forward or reverse
sorts the table contents using a Javascript, sorttable.js. 

If Round Robin Database (RRD) Archives
are collecting data from an ORB using \fIorb2rrd\fP, there are
parameter file variables to define these.

If set to true in the parameter file, \fBwebdlmon\fP, can be customized.
This displays a section in \fBwebdlmon\fP where a user can click a hyperlink
and a pop\-up window opens. This window allows a user to select only those
status parameters they are interested in observing. The selection is stored as
a cookie in the users browser memory. Any subsequent visits to \fBwebdlmon\fP will
only display the status parameters stored in the cookie. The cookie is valid for
one year from the creation date. The cookie can be reset or deleted at any time.

.SH FILES
The main \fBwebdlmon\fP processing takes place in webdlmon.inc and
is written in PHP 5. The summary XML file generated by webdlmon.xml and 
webdlmon.xsl is parsed by webdlmon.inc, which formats and displays 
the HTML table. \fBwebdlmon\fP contains all the functions to format and display status values.
Dynamic client\-side processing and HTML cookie creation is 
achieved with Javascript in webdlmon.js and sorttable.js. Configuration 
of the application in webdlmon.pf. All formatting and layout is defined by 
Cascading Style Sheets (CSS) in webdlmon.css. The webpage webdlmon.php includes
all these respective files, and expects them to be in the same directory.
The customization interface is the file webdlmoncustomize.php.

.SH PARAMETER FILE
The \fBwebdlmon\fP parameter file is used to define the XML source files 
and the \fIdlmon\fP parameter file. In addition, some of the content and 
layout can be customized. The following is a typical \fBwebdlmon\fP 
parameter file: 
.nf

sources &Arr{
	dlmon_pf 	/opt/antelope/4.8p/data/pf/dlmon.pf
	xml_src 	/path/to/webserver/tools/dlmon/xml/prelim_dlmon.xml
	xml_stash 	/path/to/webserver/tools/dlmon/xml/pretadata_stash.xml
}

dataloggers &Arr{
	both_sides 	false
	model 		q330
}

customization &Arr{
	customize 		true
	cookie_name 	webdlmonCookie
	customize_text 	"Customize webdlmon table fields?"
}

optional &Arr{
	show_legend 	false
	table_caption 	"Real\-time USArray Web\-based Data Logger Monitor: Preliminary Stations"
}

rrdtool_setup &Arr{
	rrdtool 			false
	rrdtool_graph_url 	rrdgraphs.php
	rrdtool_graph_inclusion &Tbl{
		m0
		m1
		m2
		dt
		dv
		da
	}
}

pf_revision_time 	1182460765

.fi
.IP sources
Define the paths to the source files.
.IP dlmon_pf
This specifies the path to the default (or customized) \fIdlmon\fP parameter file.
.IP xml_src
The path to the XML file that contains the datalogger status information.
.IP xml_stash
The path to the XML stash file that contains the datalogger site (dlsite) 
information.

.IP dataloggers
Define the display of datalogger information.
.IP both_sides
Display the datalogger site code in two columns, one on each side (left and right)
of the table. Leaving this as false only displays one column on the left side.
.IP model
The datalogger model. This is used to determine the columns to be displayed. 
It tells \fBwebdlmon\fP which of the dataloggers defined in \fIdlmon_pf\fP
to use.

.IP customization
Setting this to true allows users the ability to customize their \fBwebdlmon\fP view.
.IP customize
Setting this to true will display a section on the webpage where users
can click a hyperlink to open a pop\-up window. In this pop\-up window
they can customize their view of \fBwebdlmon\fP by selecting the status
parameters they are interested in. The parameters are stored in a cookie in
the clients browser.
.IP cookie_name
The name of the cookie to be stored in the clients browser.
.IP customize_text
Define the text to be used in the hyperlink to the pop\-up window.

.IP optional
Some optional settings that affect the layout of the webpage.
.IP show_legend
Show the descriptions of the status parameters from the \fIdlmon\fP parameter file.
.IP table_caption
Define a caption for the \fBwebdlmon\fP table.

.IP rrdtool_setup
Complete this section if you have a series of RRD archives for the datalogger channels.
.IP rrdtool
If you have RRDtool installed and the archives are being populated with 
\fIorb2rrd\fP set this to true.
.IP rrdtool_graph_url
Define the complete URL path to the pages that displays the RRD archives graphically.
.IP rrdtool_graph_inclusion
Define the status parameters that have RRD archives. These table cell entries will
have hyperlinks to the \fIrrdtool_graph_url\fP

.SH EXAMPLE
.IP orbdlstat2xml
.nf
% orbdlstat2xml anfops.ucsd.edu:status /path/to/website/xml/
.fi
This will output XML files named after the packet sourcenames.

.IP webdlmon.xml
.nf
% cat webdlmon.xml 
<?xml version="1.0" encoding="ISO-8859-1" ?>
<sources>
        <source href="pretadata.xml" />
</sources>
.fi
This XML file contains the name of the source XML file(s) generated by
\fIorbdlstat2xml\fP.

.IP webdlmon.xsl
.nf
% saxon -o prelim_dlmon.xml -s webdlmon.xml webdlmon.xsl
.fi
The XSL file is used by the XSLT 2.0 processor to generate \fBwebdlmon\fP
-friendly XML. The transformation includes adding sorting parameters and 
reformatting tags from parameter file format as generated by \fIorbdlstat2xml\fP.

.SH DIAGNOSTICS
\fBwebdlmon\fP does simple checks to verify if the component extensions are
installed. The output is returned to the webpage in simple error messages.

.SH "SEE ALSO"
.nf
dlmon(1), orbdlstat2xml(1), pf2xml(1), datascope_php(3h)
.fi

.SH "BUGS AND CAVEATS"
XML files produced by \fIorbdlstat2xml\fP must be transformed first with webdlmon.xsl 
and webdlmon.xml to be formatted correctly for \fBwebdlmon\fP. This conversion
requires an eXtensible Stylesheet Language (XSL) 2.0 transformation processor 
such as MSXML, Saxon, or Xalan. Contributed version tested with Saxon.
XML stash file does not require processing and is handled by \fBwebdlmon\fP internally.
\fBwebdlmon\fP requires PHP 5 with the DOM extension and libraries installed. They are 
part of the PHP 5 core.

The Javascript used to dynamically sort the HTML table, sorttable.js,
is an externally maintained script written by Stuart Langridge,
http://www.kryogenix.org/code/browser/sorttable/, and is released under an X11 license.
This Javascript will be updated outside of the Antelope Contributed software, and users
are encouraged to get the latest copy from www.kryogenix.org.

The \fBwebdlmon\fP program requires a level 1.0 DOM ("Document Object Model") browser.

.SH AUTHOR
.nf
Rob Newman
Scripps Institution of Oceanography, University of California San Diego
.fi
.\" $Id$
