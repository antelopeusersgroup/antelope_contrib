Schema polygon1.2
	Description ( "Schema for polygons" )
	Detail {
		This schema holds information on polygons:
		some of the ideas are taken from the gshhs file format	
		(altough the gshhs format itself is not yet implemented)
		basic ideas:
		allows storage in several formats
		db keeps bounging-box -> fast searching
		different _levels_ allowed, idea is to check for inclusion in country, province etc...

	}
	Timedate lddate
	;

		
Attribute area
	Real (12)
	Format ( "%12.3f" )
	Null ( "-999.00000" )
	Range ( "area >= 0" )
	Units ( "kilometers^2" )
	Description ( "area covered " )
	Detail {
		The area covered by e.g. a polygon
	}
	;

Attribute auth
	String (15)
	Format ( "%-15s" )
	Null ( "-" )
	Description ( "source/originator" )
	Detail {
		This records the originator of an arrival (in arrival
		relation) or origin (in origin relation).  Possibilities
		include externally supplied arrivals identified according
		to their original source, such as WMO, NEIS, CAN(adian),
		UK(array), etc.  This may also be an identifier of an
		application generating the attribute, such as an automated
		interpretation or signal processing program.
	}
	;
	
Attribute bundle
	Dbptr ( 32 )
	Description ( "database pointer to bundled/grouped data" ) 
	Format ( "%d %d %d %d" ) 
	Detail {
	    A bundle is a special database pointer which refers to
	    either an entire table or view, or to a contiguous subset
	    of some table or view.  In the former case, both the
	    record number and the field number should be dbALL.  In
	    the latter case, the record number and the field number
	    specify a range of records in the table.  
	}
	;
	
Attribute bundletype
	Integer ( 20 )
	Format ("%20d" ) 
	Description ( "type of bundle" ) 
	Detail { 
	    The bundle type is an arbitrary integer which specifies
	    the kind of the bundle.  
	}
	;
Attribute closed
	String (1)
	Format ( "%-1s" )
	Null ( "-" )
	Description ( "is the polygon closed, i.e. is this a polygon or a polyline ?" )
	Detail {
		The table polygon allows the strorage of multiline objects.
		The attribute closed discriminates between polylines and closed polygons.	
		y - yes
		n - no
	}
	;

Attribute commid
	Integer (8)
	Format ( "%8d" )
	Null ( "-1" )
	Range ( "commid > 0" )
	Description ( "comment id" )
	Detail {
		This is a key used to point to free-form comments entered
		in the remark relation.  These comments store additional
		information about a tuple in another relation.  Within the
		remark relation, there may be many tuples with the same
		commid and different lineno, but the same commid will
		appear in only one other tuple among the rest of the
		relations in the database.  See lineno.
	}
	;

Attribute dfile
	String (32)
	Format ( "%-32s" )
	Null ( "-" )
	Description ( "data file" )
	Detail {
		In wfdisc, this is the file name of a disk-based waveform
		file.  In instrument, this points to an instrument
		response file.  See dir.
	}
	;
Attribute dir
	String (64)
	Format ( "%-64s" )
	Null ( "-" )
	Description ( "directory" )
	Detail {
		This attribute is the directory-part of a path name. 
		Relative path names or '.' (dot), the notation for the
		current directory, may be used.
	}
	;

Attribute east
	Real (9)
	Format ( "%9.4f" )
	Null ( "-999.0000" )
	Units ( "degrees" )
	Description ( "east" )
	Detail {
		maximal longitude
	}
	;

Attribute foff
	Integer (10)
	Format ( "%10d" )
	Null ( "0" )
	Range ( "foff >= 0" )
	Description ( "byte offset" )
	Detail {
		This is the byte offset of a waveform segment within a
		data file.  It is used when data are multiplexed.  See dir
		and dfile.
	}
	;

Attribute ftype
	String (2)
	Format ( "%-2s" )
	Null ( "-" )
	Description ( "file type (storage format)" )
	;
	
Attribute keyname
        String (15)
        Format ( "%-15s" )
        Null ( "-" )
        Range ( "keyname =~ /pid|commid|extid|arid|chanid|commid|edid|evid|inid|magid|orid|stassid|wfid/" )
        Description ( "id name (arid, orid, etc.)" )
        Detail {
                This attribute contains the actual name of a key whose
                last assigned numeric value is saved in keyvalue.
        }
		;
Attribute keyvalue
        Integer (8)
        Format ( "%8d" )
        Null ( "-1" )
        Range ( "keyvalue > 0" )
        Description ( "last value used for that id" )
        Detail {
                This attribute maintains the last assigned value (a
                positive integer) of the counter for the specified
                keyname.  The number keyvalue is the last counter value
                used for the attribute keyname.  Key values are maintained
                in the database to ensure uniqueness.
        }
		;

Attribute lddate
	Time (17)
	Format ( "%17.5lf" )
	Null ( "-9999999999.99900" )
	Units ( "Seconds" )
	Description ( "(epoch) time of last record modification" )
	Detail {
		This is the last time the record was modified.
	}
	;
Attribute level
	Integer (2)
	Format ( "%2d" )
	Null ( "-1" )
	Description ( "area covered " )
	;

Attribute lineno
	Integer (8)
	Format ( "%8d" )
	Null ( "-1" )
	Range ( "lineno > 0" )
	Description ( "comment line number" )
	Detail {
		This integer attribute is assigned as a sequence number
		for multiple line comments.  The combination of commid and
		lineno is unique.
	}
	;
Attribute north
	Real (9)
	Format ( "%9.4f" )
	Null ( "-999.0000" )
	Units ( "degrees" )
	Description ( "north" )
	Detail {
		maximum latitude
	}
	;

Attribute npoints
	Integer (6)
	Format ( "%6d" )
	Null ( "-1" )
	Description ( "number of points" )
	;

Attribute pid
	Integer (8)
	Format ( "%8d" )
	Null ( "-1" )
	Description ( "polygon id" )
	;

Attribute pname
	String (80)
	Format ( "%-80s" )
	Null ( "-" )
	Description ( "name of a polygon" )
	;

Attribute ptype
	String (2)
	Format ( "%-2s" )
	Null ( "-" )
	Description ( "polygon type" )
	;

Attribute remark
	String (80)
	Format ( "%-80s" )
	Null ( "-" )
	Description ( "free format comment" )
	Detail {
		This single line of text is an arbitrary comment about a
		record in the database.  The comment is linked to its
		parent relation only by forward reference from commid in
		the tuple of the relation of interest.  See commid and
		lineno.
	}
	;
Attribute south
	Real (9)
	Format ( "%9.4f" )
	Null ( "-999.0000" )
	Description ( "south" )
	;
Attribute west
	Real (9)
	Format ( "%9.4f" )
	Null ( "-999.0000" )
	Description ( "west" )
	;

Relation lastid
        Fields (  keyname keyvalue lddate )
        Primary (  keyname )
        Description ( "Counter values (Last value used for keys)" )
        Detail {
                This relation is a reference table from which programs may
                retrieve the last sequential value of one of the numeric
                keys.  Id keys are required before inserting a record in
                numerous tables.  The table has exactly one row for each
                keyname.  In the core schema there are just 9 distinct
                identifier keys:  arid, chanid, commid, evid, inid, magid,
                orid, stassid, wfid.  This table will also support
                application-specific keys, provided they are defined by
                some table.  Users are encouraged to use the dbnextid
                library routine or command to obtain a unique counter
                value.
        }
        ;
Relation polygon
	Fields ( pid pname ptype closed level area west east north south npoints ftype dir dfile foff auth commid lddate )
	Primary ( pname ptype )
	Alternate ( pid )
	Foreign ( commid  ) 
	Defines pid
	Description ( "polygons" )
	Detail {
		This relation holds information on polygons
	}
	;
	
Relation remark
	Fields ( commid lineno remark lddate )
	Primary ( commid lineno )
	Defines commid
	Description ( "free format comment" )
	Detail {
		This single line of text is an arbitrary comment about a
		record in the database.  The comment is linked to its
		parent relation only by forward reference from commid in
		the tuple of the relation of interest.  See commid and
		lineno.
	}
	;

Attribute floatval
	Real (16)
	Format ( "%16.6f" )
	Null ( "-999.00000" )
	Description ( "floating poin value" )
	Detail {
        arbitrary attribute of type real
	}
	;

Attribute intval
	Integer (12)
	Format ( "%12d" )
	Null ( "-1" )
	Description ( "integer value" )
	Detail {
        arbitrary attribute of type integer
	}
	;

Attribute attribute
	String (40)
	Format ( "%-40s" )
	Null ( "-" )
	Description ( "name of attribute" )
	Detail {
		This is the name of an arbitrary attribute
    }
    ;
Attribute value
	String (120)
	Format ( "%-40s" )
	Null ( "-" )
	Description ( "name of attribute" )
	Detail {
		This is the name of an arbitrary attribute
    }

    ;
Attribute time
    Time (17)
    Format ( "%17.5f" )
    Null ( "-9999999999.99900" )
    Units ( "Seconds" )
    Description ( "epoch time" )
    Detail {
        Epochal time given as seconds and fractions of a second
        since hour 0 January 1, 1970, and stored in a double
        precision floating number.  Refers to the relation data
        object with which it is found.  E.g., in arrival - arrival
        time; in origin - origin time; in wfdisc, - start time of
        data.  Where date of historical events is known, time is
        set to the start time of that date; where the date of
        contemporary arrival measurements is known but no time is
        given, then the time attribute is set to the NA value.
        The double-precision floating point number allows 15
        decimal digits.  At 1 millisecond accuracy this is a range
        of 3 years.  Where time is unknown, or prior to Feb.  10,
        1653, set to the NA value.
    }
    ;
Relation attribute
	Fields ( pid attribute value intval floatval time auth lddate )
    Primary ( pid attribute )
    Description ( "additional attributes" )
    Detail {
        This table holds additional attributes to polygonal regions like
        name, zipcode and so on    
    }
    ;
