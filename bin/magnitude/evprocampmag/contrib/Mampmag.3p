.TH MAMPMAG 3P
.SH NAME
Mampmag \- magnitude from velocity amplitudes as per NMSOP,  computational class for evproc generalized event processing
.SH SYNOPSIS
.nf
use Mampmag ;

($obj,$hashref) = new($class,"db" => $dbref,
		"dbm" => $dbmref[,$name1,$val1[,...]]) ;

display($obj[,@keys]) ;

put($obj,$name1,$val1[,...]) ;

@vals = get($obj,@keys) ;

$hashref = getwftimes($obj) ;

$hashref = process_channel($obj,$trref,$flush) ;

$hashref = process_station($obj,$sta,$flush) ;

$hashref = process_network($obj,$flush) ;

.fi
.SH DESCRIPTION
This provides a perl computational class for computing
magnitudes from velocity amplitudes, for use in \fBorbevproc(1)\fP
and \fBdbevproc(1)\fP generalized event processing programs. The methodology
is identical to the original orbampmag program.
.SH "PARAMETER FILE"
The parameter file object used by the \fBMampmag\fP class must be specified in the original \fBorbevproc.pf\fP
or \fBdbeveproc.pf\fP parameter files as associative arrays that are indexed through the entries in
the \fIevent_processes\fP table (see \fBorbevproc(1)\fP). An example parameter file associative array
for \fBMl\fP computation with ampmag\fP.
.in 2c
.ft CW
.nf

.ne 23

#    This is a parameter template for Ml computation using the ampmag module

mlampmag_params &Arr{
    filter    BW 1.0 5 10.0 5
    time0     S    # center of measuring time window
    # P - pphasetime (see man pphasetime)
    # S - sphasetime
    # R - rayleigh wave - here we use deg2km(delta) / v_r
    time_window_factor    1.0     # time window in relation to S-time -P-time 
    minimum_time_window 10.0      #time_window in seconds, in case P and S are really close
    min_delta    0
    max_delta    5.5

    c0     -0.304           
    c1        1.66        
    channels &Tbl{
    #   snet  sta    chan      snr   twin    c2    c3   c4    c5
    #   expr  expr   expr      thr   noise
        XX     .*    HH[NE].*  3.0  60.0     0.0   1.0  1.0   0.0 -65000 65000
        OE     .*    HH[NE]    3.0  60.0     0.0   1.0  1.0   0.0                
        SI     .*    HH[NE]    3.0  60.0     0.0   1.0  1.0   0.0                
    #   CZ     .*    HH[NE]    3.0  60.0     0.0   1.0  1.0   0.0                
    #   GR     .*    BH[NE]    3.0  60.0     0.0   1.0  1.0   0.0                
    }
    reject &Tbl{
    #    snet_expr sta_expr
        TA        ADK
    }
    v_r    4.0  # velocity for surface waves used to determine surface wave arrival time
                    # only used when computing Ms, i.e. when time0 is set to R
    update_time                 10.0
    maximum_wait_time          300.0
    maximum_bad_fraction         0.2
    auth_accept                   .*
    output_magtype               ml
    output_auth                 ampmag
    output_stamag               yes
    output_wfmeas               yes
}
.fi
.ft P
.in
.LP
The recipe of stations and channels to be used to compute magnitude are given
in the \fIchannels\fP table. Each entry in the table must consist of at least 9 white space separated
fields:
.RS 0.5i
.IP \fIsnet_expr\fP
This is a regular expression that is matched against the station SEED net code, as obtained
from the temporaray database \fIsnetsta\fP table. If it matches, then the corresponding station is used.
This provides a convenient way to sift out stations for processing by network.
.IP \fIsta_expr\fP
This is a regular expression that is matched against the CSS station code, as obtained
from the temporaray database \fIassoc\fP table. If it matches, then the station is used.
.IP \fIchan_expr\fP
This is a regular expression that is matched against the CSS channel codes for a particular station, as obtained
from the metadatabase \fIsitechan\fP table. All channels that match are used in the magnitude computation.
Traditionally, for body wave magnitude, only the vertical channel should be used and, if more
than one channel matches for a particular station, the one that produces the
highest magnitude is used as the station magnitude.
.IP \fIsnr_thresh\fP
This is a signal to noise ratio minimum threshold for excluding magnitude values for signals that are close
to the noise level. If the filtered maximum body wave signal value divided by the noise value is less than
this threshold, then the magnitude value for this channel is not used.
.IP \fItwin_noise\fP
This  should  be either "tproc", or a noise time window value in seconds for computing the fil-
tered noise value. A noise value is computed from the filtered trace data as  1.414  times  the
standard  deviation  within  the noise time window. The noise time window is noise_twin seconds
long or equal to the signal processing time winodw if the "tproc" key word is used.
.IP "\fIc2\fP, \fIc3\fP, \fIc4\fP, \fIc5\fP"
these are parameters for magnitude computation in the \fIgeneral\fP magnitude formula used by the ampmag method:
c0+log10(amp)+c1*log10(delta)+c2*log10(delta*c3+c4)+c5 where delta is the distance in degrees.
.IP \fIclip_lower\fP
This is a lower clip limit in raw counts. If any data points in the signal or noise windows range below
this value, then the data is clipped and the station will not be used for computing magnitude.
If no clip checking is required, then this value, along with \fIclip_upper\fP, can be omitted.
.IP \fIclip_upper\fP
This is a upper clip limit in raw counts. If any data points in the signal or noise windows range above
this value, then the data is clipped and the station will not be used for computing magnitude.
If no clip checking is required, then this value, along with \fIclip_lower\fP, can be omitted.
.IP \fIv_r\fP
Surface wave velocity to determine surface wave arrival time.
Only needed when computing \fIMs\fP.
.IP "\fItime0\fP, \fItime_window_factor\fP, \fIminimum_time_window\fP"
The time window for processing waveforms is determined from
\fItime0\fP and \fItime_window_factor\fP. The processing window is
\fBcentered\fP around the theoretical arrival time of the onset
specified by \fItime0\fP and has a width of (S-time - P-time) * \fItime_window_factor\fP.
The time specified by \fIminimum_time_window\fP allows to mitigate the case when S and P are close together.
.IP "\fImindelta\fP, \fImaxdelta\fP"
These values in degrees define the distance region for magnitude computations.
Only stations where the distance from the origin falls into the region defined here are taken into account.
.IP "\fIc0, \fIc1\fP, \fIc2\fP, \fIc3\fP, \fIc4\fP, \fIc5\fP"
define whatever you might find appropriate to compute your magnitudes.
The formula actually used for magnitude computation is the following:
c0+log10(amp)+c1*log10(delta)+c2*log10(delta*c3+c4)+c5
.br
the units for amp are nanometers while the units for delta are degrees
.RE
.LP
When determining which channels to process, each line in the \fIchannels\fP table is compared against
the SEED net code and the CSS sta and chan codes. The first line that matches defines the parameters
for that channel. Stations that match in the \fIchannels\fP table can be rejected if they match against
any of the lines in the \fIreject\fP table. The other parameters are as follows:
.IP \fIupdate_time\fP
This is a time duration in seconds (\fB0.0\fP to disable) that is passed back to \fBorbevproc\fP to
instruct it to call \fBMampmag::process_channel\fP every \fIupdate_time\fP seconds even if the
particular channel is not filled.
.IP \fImaximum_wait_time\fP
This is a time duration in seconds (\fB0.0\fP to disable) that is passed back to \fBorbevproc\fP to
instruct it to wait no longer than \fImaximum_wait_time\fP seconds after the end of the signal time window before
closing out the event processing by setting the \fI$flush\fP argument in \fBprocess_channel\fP, \fBprocess_station\fP
and \fBprocess_network\fP. Any \fBMbusneic\fP objects will stop processing, produce partial results if
possible and expect to be destroyed by \fBorbevproc\fP.
.IP \fImaximum_bad_fraction\fP
This is a fractional value of tolerable missing, or bad, data sample values that will allow the production of
results even when there are missing sample values and \fBorb/dbevproc\fP is telling the processing methods to
flush their results. The \fBMbusneic\fP processing opjects will attempt to compute magnitude values as
long as the missing sample values in the signal search windows are less than this fraction.
.IP \fIauth_accept\fP
this is a regular expression that is matched against the input \fIorigin.author\fP fields to
determine which events to process.
.IP \fIoutput_magtype\fP
This is a string that specifies the body wave magnitude type that will be put in the output \fInetmag.magtype\fP
and \fIstamag.magtype\fP fields. For body wave magnitude this is normally \fB"mb"\fP.
.IP \fIoutput_author\fP
This is a string that specifies the author that will be put in the output \fInetmag.auth\fP
and \fIstamag.auth\fP fields. The existing \fIorigin.auth\fP field is appended with a white
space and the value of \fIoutput_magtype\fP. Also the network magnitude result is put
into the \fIorigin.mb\fP field.
.IP \fIoutput_stamag\fP
If this is set to \fB"yes"\fP, then output \fIstamag\fP entries are made for each of the
stations that contributed to the network magnitude.
.IP \fIoutput_wfmeas\fP
If this is set to \fB"yes"\fP, then output \fIwfmeas\fP entries are made for each of the
stations that contributed to the network magnitude. The \fIwfmeas\fP entries will contain
the precise signal, noise and time measurements that were made on the trace data and were
the basis for the magnitude calculations. The only way of linking these \fIwfmeas\fP entries
back to the various magnitude table entries is through an \fIarid\fP. Therefore, dummy unassociated
\fIarrival\fP entries are also created which are indexed in the \fIstamag\fP table with their \fIiphase\fP
codes set to \fIoutput_magtype\fP and their \fItime\fPs set to the time where the magnitude
measurement was made.
.SH LIBRARY
use lib $ENV{ANTELOPE}/data/evproc ;
.SH "SEE ALSO"
.nf
orbevproc(1), evproc(3p), Magnitude(3p)
.fi
.SH "BUGS AND CAVEATS"
We encourage the users to inspect all of the source code, written as perl modules,
that is used to compute the magnitudes using \fBorbevproc(1)\fP and \fBdbevproc(1)\fP.
These can be found in $ANTELOPE/data/evproc. All of the details of how the magnitudes are
computed can be seen in the perl module source code files. If you want to change anything,
please feel free to do so. However, please do not change any of these modules directly as they
are supplied in the distribution. Instead, copy the modules, give them new names and
change your own copies as you wish.
.SH AUTHOR
Nikolaus Horn
.br
nikolaus.horn@zamg.ac.at, ZAMG/Vienna
