tarball_time_format %Y_%m_%d
tar_command tar
make_command make

contrib_src_subdir src/contrib

dbxcor &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
		xmotif
	}
	build &Tbl{
		lib/graphics/seisw
		lib/seismic/libseispp
		lib/utility/libgclgrid
		lib/perf
		bin/db/dbxcor
	}
	package &Tbl{
		static/libsciplot.a
		bin/dbxcor
		data/pf/dbxcor.pf
		data/schemas/css3.0.ext/evlink
		data/schemas/css3.0.ext/sclink
		data/schemas/css3.0.ext/wfprocess
		data/schemas/css3.0.ext/xcorarrival
		data/schemas/css3.0.ext/xcorbeam
		man/man1/dbxcor.1
		bin/smartpick
		data/pf/smartpick.pf
		man/man1/smartpick.1
		static/libseispp.a
		static/libseisw.a
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.BasicGCLgrid.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.Cartesian_point.tyv.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLgrid.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLgrid3d.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLgrid_error.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLscalarfield.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLscalarfield3d.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLvectorfield.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.GCLvectorfield3d.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.Geographic_point.tyv.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.create_3dgrid_contiguous.checksum.880250e9.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.create_4dgrid_contiguous.checksum.30144256.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.extract_gridline.checksum.d8861568.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.fme_weights_.checksum.ee6cf964.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.free_3dgrid_contiguous.checksum.9cd6ef36.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.free_4dgrid_contiguous.checksum.970b2485.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.initialize_1Dscalar.checksum.9756fa5d.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.initialize_1Dscalar.checksum.d3dde98f.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.pathintegral.checksum.18f3459b.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.pkg.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.r0_ellipse.double.r0_ellipse.-28.double.-29.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.remap_path.checksum.9d7961f7.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.dmatrix.dmatrix.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.dmatrix.dmatrix_error.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.dmatrix.dmatrix_index_error.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.dmatrix.dmatrix_size_error.cls.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.dmatrix.pkg.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.flatvel.double.flatvel.-28.double.v.-2c.double.z.-29.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.flatz.double.flatz.-28.double.z.-29.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.uflatvel.double.uflatvel.-28.double.v.-2c.double.z.-29.fct.html
		doc/seispp/gclgrid/ccdoc.GCLgrid.GCLgrid.uflatz.double.uflatz.-28.double.z.-29.fct.html
		doc/seispp/gclgrid/ccdoc.class_summary.html
		doc/seispp/gclgrid/gclgrid.db
		doc/seispp/gclgrid/index.html
		include/gclgrid.h
		include/dmatrix.h
		static/libgclgrid.a
		man/man3/gclgrid.3
		man/man3/dmatrix.3
		man/man3/pathintegral.3
		man/man3/ustrans.3
		man/man3/extract_gridline.3
		include/glputil.h
		lib/libglputil.dylib
		static/libglputil.a
		man/man3/check_required_pf.3
		man/man3/ftest.3
		man/man3/dbform_working_view.3
		man/man3/glp_matrix_utils.3
	}
}
all_contrib &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
	}
	build &Tbl{
		.
	}
}
antelope_matlab &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
		matlab
	}
	build &Tbl{
		data/matlab
	}
}
antelope_php &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
		php
	}
	build &Tbl{
		data/php
	}
}
antelope_python &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
		python
	}
	build &Tbl{
		nobuild/lib/dataformat/dbxml
		nobuild/data/python
	}
	package &Tbl{
		lib/libdbxml.dylib
		static/libdbxml.a
		man/man3/db2xml.3
		local/bin/python
		local/lib/python__datascope.dylib 
		local/lib/python__orb.dylib
		local/lib/python__stock.dylib
		local/lib/python__Pkt.dylib
		local/data/python/antelope/_orb.so
		local/data/python/antelope/_datascope.so
		local/data/python/antelope/_stock.so
		local/data/python/antelope/_Pkt.so
		local/data/python/antelope/datascope.py
		local/data/python/antelope/orb.py
		local/data/python/antelope/stock.py
		local/data/python/antelope/Pkt.py
		local/data/python/antelope/__init__.py
		local/data/templates/xpy
		local/man/man3/pythondb.3p
		local/man/man3/pythonorb.3p
		local/man/man3/pythonstock.3p
		local/man/man3/pythonPkt.3p
	}
}
orb2amqp &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
		python
		python_amqplib
	}
	build &Tbl{
		nobuild/bin/rt/orb2amqp
	}
	package &Tbl{
		local/bin/orb2amqp
		local/bin/amqp2orb
		local/data/pf/orb2amqp.pf
		local/data/pf/amqp2orb.pf
		local/man/man1/orb2amqp.1
		local/man/man1/amqp2orb.1
	}
}
isi2orb &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
	}
	build &Tbl{
		bin/rt/isi2orb
	}
	package &Tbl{
		include/libisi_iacp.h 
		include/libisi_isi.h 
		include/libisi_logio.h 
		include/libisi_list.h 
		include/libisi_platform.h 
		include/libisi_stdtypes.h 
		include/libisi_util.h 
		static/libisi.a 
		man/man3/libisi.3 
		doc/ext/isi/isi.pdf 
		doc/ext/isi/iacp.pdf 
		bin/isi2orb 
		data/pf/isi2orb.pf 
		man/man1/isi2orb.1 
	}
}
rtkill &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
	}
	build &Tbl{
		nobuild/bin/rt/rtkill
	}
	package &Tbl{
		bin/rtkill 
		data/pf/rtkill.pf 
		man/man1/rtkill.1 
	}
}
db2sql &Arr{
	product	&env(ANTELOPE)
	src_subdir	&contrib_src_subdir
	capabilities_required &Tbl{
	}
	build &Tbl{
		nobuild/lib/dataformat/db2sql
		nobuild/lib/dataformat/dbmon
		nobuild/lib/perl/db2sql
		nobuild/lib/perl/dbmon
		bin/export/db2sql
		nobuild/bin/export/dbschema2sql
	}
}
#bootstrap &Arr{
#	product	&env(ANTELOPE)
#	src_subdir	&contrib_src_subdir
#	capabilities_required &Tbl{
#	}
#	build &Tbl{
#		lib/localmake_config
#		nobuild/bin/utility/cf
#		bin/utility/localmake
#	}
#}

capabilities	&Arr{
    matlab	&Arr{
        Description	Antelope Matlab Interface and Matlab-based Antelope tools
        Detail	&Literal{
			The 'matlab' capability provides linkage to the Matlab interpreter on the
			local machine. These is used within Antelope-contrib primarily for compilation
			of the Antelope Toolbox for Matlab. 
		}
        enable	&Arr{
            Darwin	0
            Linux	0
            SunOS	0
        }
        required_macros	&Tbl{
            MATLAB
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find Matlab directory '$MATLAB' " .
				       "implied by currently configured value '$MATLAB' of MATLAB macro";
			$success_msg = "Matlab is available within '$MATLAB'";
			-d "$MATLAB"
			}
        }
    }
    php	&Arr{
        Description	Antelope PHP Interface and PHP-based Antelope tools
        Detail	&Literal{
			The 'php' capability provides linkage to the PHP interpreter on the
			local machine (if there are several PHP interpreters, this capability 
			identifies which one has been chosen to be used with Antelope). This 
			capability is used within Antelope-contrib primarily for compilation of 
			the Antelope PHP interface, though it also controls whether other 
			PHP-dependent Antelope-contrib tools get installed (e.g. webdlmon(3H) 
			and webdbe(3H)). 
		}
        enable	&Arr{
            Darwin	0
            Linux	0
            SunOS	0
        }
        required_macros	&Tbl{
            PHP_INC
            PHP_EXECUTABLE
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find header-file directory '$PHP_INC/Zend' " . 
				       "implied by currently configured value '$PHP_INC' of PHP_INC macro";
			$success_msg = "PHP include files are available within '$PHP_INC'";
			-d "$PHP_INC/Zend"
			}
            &Literal{
			$failure_msg = "File '$PHP_EXECUTABLE' specified by the " .
				       "PHP_EXECUTABLE macro is not present or not executable'";
			$success_msg = "PHP executable is available as '$PHP_EXECUTABLE'";
			-f "$PHP_EXECUTABLE" && -x "$PHP_EXECUTABLE"
			}
        }
    }
    python	&Arr{
        Description	Antelope Python Interface and Python-based Antelope tools
        Detail	&Literal{
			The 'python' capability provides linkage to the Python interpreter on the
			local machine (if there are several Python interpreters, this capability 
			identifies which one has been chosen to be used with Antelope). This capability 
			is used within Antelope-contrib primarily for compilation of the Antelope Python 
			interface, though it also controls whether other Python-dependent Antelope-contrib 
			tools get installed (e.g. dbwfserver(1) and orbtopo(1)). 
		}
        enable	&Arr{
            Darwin	0
            Linux	0
            SunOS	0
        }
        required_macros	&Tbl{
            PYTHONINCLUDE
            PYTHON_EXECUTABLE
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find header-file '$PYTHONINCLUDE/Python.h' " .
				       "implied by currently configured value '$PYTHONINCLUDE' of PYTHONINCLUDE " .
				       "macro";
			$success_msg = "Python include files are available within '$PYTHONINCLUDE'";
			-e "$PYTHONINCLUDE/Python.h"
			}
            &Literal{
			$failure_msg = "File '$PYTHON_EXECUTABLE' specified by the " .
				       "PYTHON_EXECUTABLE macro is not present or not executable'";
			$success_msg = "Python executable is available as '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE"
			}
        }
    }
    python_amqplib &Arr{
		enable &Arr{
			Darwin 0
			SunOS 0
			Linux 0
		}
		required_macros &Tbl{
		}
		tests &Tbl{
			&Literal{
			$failure_msg = "Python 'amqplib' is not available within " .
				       "Python interpreter '$PYTHON_EXECUTABLE'";
			$success_msg = "Python 'amqplib' is available within '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE" && system( "$PYTHON_EXECUTABLE -c 'import amqplib'" ) == 0
			}
		}
		Description AMQP interface library for Python
		Detail &Literal{
			The 'python_amqplib' capability supports usage of the 'py-amqplib' Python 
			client library available from http://code.google.com/p/py-amqplib/.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing "easy_install amqplib" on 
			the command-line. 
		}
    }
    python_matplotlib &Arr{
		enable &Arr{
			Darwin 0
			SunOS 0
			Linux 0
		}
		required_macros &Tbl{
		}
		tests &Tbl{
			&Literal{
			$failure_msg = "Python 'matplotlib' is not available within " .
				       "Python interpreter '$PYTHON_EXECUTABLE'";
			$success_msg = "Python 'matplotlib' is available within '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE" && system( "$PYTHON_EXECUTABLE -c 'import matplotlib'" ) == 0
			}
		}
		Description Matlab-emulation library for Python
		Detail &Literal{
			The 'python_matplotlib' capability supports usage of the 'matplotlib' Python 
			client library available from http://matplotlib.sourceforge.net/.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing "easy_install matplotlib" on 
			the command-line. 
		}
    }
    python_pygraphviz &Arr{
		enable &Arr{
			Darwin 0
			SunOS 0
			Linux 0
		}
		required_macros &Tbl{
		}
		tests &Tbl{
			&Literal{
			$failure_msg = "Python 'pygraphviz' is not available within " .
				       "Python interpreter '$PYTHON_EXECUTABLE'";
			$success_msg = "Python 'pygraphviz' is available within '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE" && system( "$PYTHON_EXECUTABLE -c 'import pygraphviz'" ) == 0
			}
		}
		Description Graphviz graph-analysis library for Python
		Detail &Literal{
			The 'python_pygraphviz' capability supports usage of the 'pygraphviz' Python 
			client library available from http://networkx.lanl.gov/pygraphviz.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing "easy_install pygraphviz" on 
			the command-line. 
		}
    }
    perl_DBI &Arr{
		enable &Arr{
			Darwin 0
			SunOS 0
			Linux 0
		}
		required_macros &Tbl{
		}
		tests &Tbl{
			&Literal{
			$failure_msg = "Perl 'DBI' module is not available";
			$success_msg = "Perl 'DBI' module is available";
			eval { use DBI; 1; }
			}
		}
		Description Perl DBI database-connectivity CPAN module
		Detail &Literal{
			The 'perl_DBI' capability supports usage of the Perl-CPAN 'DBI' Perl 
			module available from http://www.cpan.org.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing 
			"perl -MCPAN -e 'install DBI'" on the command-line, making sure to use 
			the Antelope perl interpreter when doing so. 
		}
    }
    xmotif	&Arr{
        Description	X/Motif Graphics toolkit links
        Detail	&Literal{
			The 'xmotif' capability provides linkage to the X/Motif include files and 
			link libraries on the local machine. These are used within Antelope-contrib
			for the dbxcor(1) application as well as supporting libraries such as
			libseisw. 
		}
        enable	&Arr{
            Darwin	0
            Linux	0
            SunOS	0
        }
        required_macros	&Tbl{
            XMOTIFINCLUDE
            XMOTIFLIB
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find header-file directory '$XMOTIFINCLUDE/Xm' " . 
				       "implied by currently configured value '$XMOTIFINCLUDE' of XMOTIFINCLUDE macro";
			$success_msg = "Xmotif include files are available within '$XMOTIFINCLUDE'";
			-d "$XMOTIFINCLUDE/Xm"
			}
            &Literal{
			$failure_msg = "Couldn't find library-file directory '$XMOTIFLIB' " . 
				       "implied by currently configured value '$XMOTIFLIB' of XMOTIFLIB macro";
			$success_msg = "Xmotif library files are available within '$XMOTIFLIB'";
			-d "$XMOTIFLIB"
			}
        }
    }
    boost	&Arr{
        Description	Boost C++ library
        Detail	&Literal{
                    The boost library contains a large set of utility C++
                    objects that are well maintained and seem to commonly
                    be used as a final testbed before adoption into the 
                    standard.  Several packages under development by
                    Gary Pavlis use this library. 
		}
        enable	&Arr{
            Darwin	0
            Linux	0
            SunOS	0
        }
        required_macros	&Tbl{
            BOOSTINCLUDE
            BOOSTLIB
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Could not find header-file directory '$BOOSTINCLUDE' " .
				       "implied by currently configured value '$BOOSTINCLUDE' of BOOSTINCLUDE  macro";
			$success_msg = "Boost include files are available within '$BOOSTINCLUDE'";
			-d "$BOOSTINCLUDE/boost"
			}
            &Literal{
			$failure_msg = "Couldn't find library-file directory '$BOOSTLIB ' " . 
				       "implied by currently configured value '$BOOSTLIB' of BOOSTLIB macro";
			$success_msg = "Boost libraries are available within '$BOOSTLIB'";
			-d "$BOOSTLIB"
                    }
        }
    }
    vtk	&Arr{
        Description	Visualization Tool Kit 
        Detail	&Literal{
                The Visualization Took Kit (VTK) is a large open-source
                library for 3D visualization.  The paraview program 
                supported on teragrid uses this library.  Pavlis has
                developed some applications to interface to this 
                tool kit.
		}
        enable	&Arr{
            Darwin	0
            Linux	0
            SunOS	0
        }
        required_macros	&Tbl{
            VTKROOT
            VTKINCLUDE
            VTKLIB
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find top level directory '$VTKROOT ' " . 
				       "implied by currently configured value '$VTKROOT' of VTKROOT macro";
			$success_msg = "VTk root directory is available as '$VTKROOT'";
			-d "$VTKROOT"
                    }
            &Literal{
			$failure_msg = "Could not find header-file directory '$VTKINCLUDE' " .
				       "implied by currently configured value '$VTKINCLUDE' of VTKINCLUDE  macro";
			$success_msg = "VTk include files are available within '$VTKINCLUDE'";
			-d "$VTKINCLUDE"
			}
            &Literal{
			$failure_msg = "Couldn't find library-file directory '$VTKLIB ' " . 
				       "implied by currently configured value '$VTKLIB' of VTKLIB macro";
			$success_msg = "VTk library files are available within '$VTKLIB'";
			-d "$VTKLIB"
                        }
        }
    }
}
antelope	&env(ANTELOPE)
dest	&antelope/local/include
extra_rules	&Literal{
.SUFFIXES: .SUFFIXES .xpy .xphp .wwwphp

% : %.xphp $(ANTELOPE)/local/data/templates/xphp
	$(RM) $@
	cat $(ANTELOPE)/local/data/templates/xphp $< > $@
	chmod a+x $@

.wwwphp.php : $(ANTELOPE)/local/data/templates/wwwphp
	$(RM) $@
	cat $(ANTELOPE)/local/data/templates/wwwphp $*.wwwphp > $@
}
header	&Literal{
# DO NOT MODIFY -- Automatically generated file -- DO NOT MODIFY
#
# This file has been automatically generated by the localmake_config(1) program.
# Run localmake_config(1) to regenerate if necessary.
# See the localmake_config(1)  man page for further details. 
}
macros	&Arr{
    MATLAB	&Arr{
        Darwin	
        Description	Top-level directory of Matlab installation
        Detail	&Literal{
			The MATLAB macro specifies the top-level directory
			of the Matlab installation on the local machine. 
			On Solaris or Linux, this may be something like 
			'/usr/local/matlab'. On Mac, it may be something
			like '/Applications/MATLAB_R2009b.app'.
		}
        Linux	
        SunOS	
    }
    PHP_EXECUTABLE	&Arr{
        Darwin	
        Description	Absolute pathname of PHP interpreter
        Detail	&Literal{
		     The PHP_EXECUTABLE macro specifies the absolute 
		     pathname of the PHP interpreter to be used for
		     the Antelope PHP interface. The PHP_INC
		     and PHP_EXECUTABLE macros must be set consistent 
		     with each other, i.e. referring to PHP header files 
		     and PHP executable that belong together. An example 
		     value for the PHP_EXECUTABLE macro might be '/usr/bin/php', although
		     this of course depends on local system configuration.
		}
        Linux	
        SunOS	
    }
    PHP_INC	&Arr{
        Darwin	
        Description	Location of PHP header files
        Detail	&Literal{
		     The PHP_INC macro specifies the location of 
		     the include files (header files) for the PHP 
		     interpreter to be used with Antelope (and against which 
		     the Antelope interface to PHP will compile locally). 
		     The directory specified by this macro should contain, 
		     among other things, the sub-directories Zend/, TSRM/, and include/ 
		     (at least for versions of PHP current at the time of this writing). 
		     For the Antelope PHP toolbox to work correctly, the include files 
		     specified by the PHP_INC macro must be consistent 
		     with the PHP executable specified by the 
		     PHP_EXECUTABLE macro. An example value for the 
		     PYTHONINCLUDE macro might be '/usr/include/php', although this 
		     of course depends on local system configuration.
		}
        Linux	
        SunOS	
    }
    PYTHONINCLUDE	&Arr{
        Darwin	/usr/include/python2.6
        Description	Location of Python header files
        Detail	&Literal{
		     The PYTHONINCLUDE macro specifies the location of 
		     the include files (header files) for the Python 
		     interpreter to be used with Antelope (and against which 
		     the Python interface to Antelope will compile locally). 
		     The directory specified by this macro should contain, 
		     among other things, the file Python.h. For the Antelope 
		     Python toolbox to work correctly, the include files 
		     specified by the PYTHONINCLUDE macro must be consistent 
		     with the Python executable specified by the 
		     PYTHON_EXECUTABLE macro. An example value for the 
		     PYTHONINCLUDE macro might be '/usr/include/python2.6'
		     on a Maciontosh computer, or perhaps '/sw/include/python2.6' 
		     if the 'Fink' python interpreter is being used. 
		}
        Linux	
        SunOS	
    }
    PYTHON_EXECUTABLE	&Arr{
        Darwin	/usr/bin/python
        Description	Absolute pathname of Python interpreter
        Detail	&Literal{
		     The PYTHON_EXECUTABLE macro specifies the absolute 
		     pathname of the Python interpreter to be used for
		     the Antelope python interface. The PYTHONINCLUDE
		     and PYTHON_EXECUTABLE macros must be set consistent 
		     with each other, i.e. referring to python header files 
		     and python executable that belong together. An example 
		     value for the PYTHON_EXECUTABLE macro might be '/usr/bin/python'
		     on a Macintosh computer, or perhaps '/sw/bin/python' if the 
		     'Fink' python interpreter is being used. 
		}
        Linux	
        SunOS	
    }
    XMOTIFINCLUDE	&Arr{
        Darwin	
        Description	Location of X-Motif header files
        Detail	&Literal{
			The XMOTIFINCLUDE macro specifies the location 
			of the include files (header files) for the 
			X/Motif graphics toolkit. The directory specified 
			by this macro should contain a subdirectory called Xm/ 
			which has the actual toolkit header files. This macro must 
			be set to a value which is consistent with the location 
			given in the XMOTIFLIB macro, i.e. the header files and the 
			library files pointed to by these two macros must 
			correspond to each other. An example value for XMOTIFINCLUDE
			might be '/usr/openwin/include' on Solaris; sometimes 
			'/usr/X11R6/include' on Linux; and perhaps '/sw/include' on 
			Macintosh, if the 'Fink' distribution of X/Motif has been 
			installed there.  
		}
        Linux	/usr/X11R6/include
        SunOS	/usr/openwin/include
    }
    XMOTIFLIB	&Arr{
        Darwin	
        Description	Location of X-Motif link libraries
        Detail	&Literal{
			The XMOTIFLIB macro specifies the location 
			of the link libraries for the X/Motif graphics toolkit. 
			This macro must be set to a value which is consistent with
			the location given in the XMOTIFINCLUDE macro, i.e. the header
			files and the library files pointed to by these two macros must 
			correspond to each other. An example value for XMOTIFLIB
			might be '/usr/openwin/lib' on Solaris; sometimes 
			'/usr/X11R6/lib' on Linux; and perhaps '/sw/lib' on 
			Macintosh, if the 'Fink' distribution of X/Motif has been 
			installed there.  
		}
        Linux	/usr/X11R6/lib
        SunOS	/usr/openwin/lib
    }
    BOOSTINCLUDE	&Arr{
        Darwin	
        Description	Location of boost include files
        Detail	&Literal{
			The BOOSTINCLUDE macro defines the location of 
                        the top level directory for boost is installed
                        on this system.  Since different components of 
                        boost are separated into subdirectories below the
                        root the manual always suggest subdirectory includes
                        like <boost/boost/thread.hpp>.  Hence the macro
                        should normally point to the top of the directory
                        tree where boost is installed. 
		}
        Linux	
        SunOS
    }
    BOOSTLIB	&Arr{
        Darwin	
        Description	Location of boost compiled libraries.
        Detail	&Literal{
			The BOOSTLIB macro defines the location of 
                        the compiled library components of boost.
                        Most of boost is actually templates found
                        with the BOOSTINCLUE macro, but there are useful
                        things in the compiled portion.  This sets up
                        the path only, but an application must give
                        the specifice -l reference to which library 
                        component you want to utilize.
		}
        Linux	
        SunOS
    }
    VTKROOT	&Arr{
        Darwin	
        Description	Top of VTK package directory chain.
        Detail	&Literal{
                    The VTKROOT macro specifies the top of the rather large 
                    chain of directories that define the VTK package.  It
                    is used mostly as a convenience to define the location of
                    subdirectories similar to the way ANTELOPE defines the top
                    of the directory chain for ANTELOPE.
		}
        Linux	
        SunOS	
    }
    VTKINCLUDE	&Arr{
        Darwin	
        Description	Directory for Visualization Tool Kit include files
        Detail	&Literal{
                    The VTKINCLUDE macro defines the top level directory for 
                    include files for compiling an application with the
                    Visualization Tool Kit (VTK). 
		}
        Linux	
        SunOS	
    }
    VTKLIB	&Arr{
        Darwin	
        Description	Library directory for Visualization Tool Kit
        Detail	&Literal{
                    The VTKLIB macro defines the base location for libraries
                    that are linked to use the Visualization Tool Kit package.
                    Individual makefiles need to select the correct list of 
                    the rather large number of libraries.
		}
        Linux	
        SunOS	
    }
}

platform_rules &Arr{
  Darwin &Literal{
PHPDLDFLAGS= $(ARCHES) $(ldflags) -flat_namespace -dynamiclib -undefined suppress -install_name $(DEST)/data/php/$(PHPDLIB) $(LDEXTRA) $(LDPATH)
 }
  Linux &Literal{
PHPDLDFLAGS= $(DLDFLAGS)
  }
  SunOS &Literal{
PHPDLDFLAGS= $(DLDFLAGS)
  }
}

output_file	antelopemake.local
