.TH CHECK_SCHEMA 1 
.SH NAME
check_schema \- check database definition for consistency and completeness 
.SH SYNOPSIS
.nf
check_schema [-a] [-s|-f] [-h] schema
.fi

.SH DESCRIPTION
check_schema reads in schema definitions as all other antelope databaase processing does: schema definitions are read from one or more files found along a path that can be influenced by the environment variable \fBSCHEMA_DIR\fP as described in the manpage \fIdbschema\fP. Schema definitions can be redundant, i.e. something may be defined several times in varios files. It seems self-understanding that these definitions should be identical on all places. The program tries to detect all kind of inconsistencies in these definitions like:
.nf
  \(bu incomplete attribute definitions, i.e missing properties.
  \(bu contradicting definitions, like range definitions out 
    of scope, null values in a different format than the actual 
    values, format definitions that use a datatype different 
    from the actual entry and so on.
  \(bu incomplete definition of database tables (i.e. relations), 
    e.g. missing attributes, undefined keys and such.
  \(bu inconsistent definition of attributes, e.g. same property 
    defined different in different files.
.fi
The program runs in two stages, first by reading in files one after each other and then by checking the resulting schema as presented by the antelope database engine itself. The first step is necessary to detect contradicting definitions and to indicate in which actual file the problems occur.
The second step is necessary to verify if the database engine sees problems with the schema and to detect remaining problems. 
.SH OPTIONS
.IP "-a" 
report all problems or inconsistencies, even only cosmetic ones.
.IP "-f"
File checks only.
.IP "-s"
Schema checks only.
.IP "schema"
Name of database schema. This argument is required

.SH EXAMPLE
.nf
check_schema -a css3.0
.fi

.SH "BUGS AND CAVEATS"
The biggest problem here is to give problems the true priority. The current implementation is probably a bit too verbose.

.SH "SEE ALSO"
.nf
antelope(1), dbschema(5) 
.fi
.SH AUTHOR
.nf
Nikolaus Horn, 2022

ZAMG / Vienna, Nikolaus.Horn@zamg.ac.at
