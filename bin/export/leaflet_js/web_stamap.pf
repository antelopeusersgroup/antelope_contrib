filebase    stations    # output filename
title Antelope Demo Station Map     # title

dontshow    X[123456]TA|BSTA|CUVW|CXYZ|CO[ABCD]   # ignore sites matching this expression
layers &Tbl{
    &Arr{
        stations B0.*
        icon     http://geoweb.zamg.ac.at/my_icons/tri_26_pink.png
        description Some array in the desert
    }
    &Arr{
        stations PFO
        icon     http://geoweb.zamg.ac.at/my_icons/tri_26_pink.png
        description Pinion Flat
    }
    &Arr{
        stations # catch all stations left here
        icon     https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png
        description ANZA stations
    }
}

logo_url           https://geoweb.zamg.ac.at/images/zamg_logo_vert.png
logo_alt           ZAMG Logo
leaflet_js         https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.js
leaflet_css        https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.css
leaflet_draw_js    https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js
leaflet_draw_css   https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css
leaflet_measurecontrol_js    https://makinacorpus.github.io/Leaflet.MeasureControl/leaflet.measurecontrol.js
leaflet_measurecontrol_css   https://makinacorpus.github.io/Leaflet.MeasureControl/leaflet.measurecontrol.css


#  Note: we don't need to escape percent signs, but
#  we need double curly brackets for a single on in the output, while
#  key-fields must be embracketed only once
html_template &Literal{
<!DOCTYPE html>
<html>
<head>
    <title>{title}</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{leaflet_css}" />
    <link rel="stylesheet" href="{leaflet_draw_css}" />
    <link rel="stylesheet" href="{leaflet_measurecontrol_css}" />
    <script src="{leaflet_js}"></script>
    <script src="{leaflet_draw_js}"></script>
    <script src="{leaflet_measurecontrol_js}"></script>
    <style>
        body {{ padding:0; margin:0; }}
        html, body, #map {{ height:100%; }}
    .logospace{{position: relative; right: 0px; top: -5px; }}
    .txtspace{{position: relative; right: 0px;top: -5px; background:white; }}
    @media all and (max-device-width: 480px) {{ .logospace{{display: none; }} }}
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        var LeafIcon = L.Icon.extend({{
            options: {{
                iconSize:     [26, 26],
                iconAnchor:   [12, 25],
                popupAnchor:  [0, -25]
                }}
            }});
        {icons}

        {layers}

        {markers}

        var osm_Attr='&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> Contributors',
            esri_Attr='&copy; <a href="http://www.esri.com/">Esri</a> i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community';

        var normal =  L.tileLayer('http://{{s}}.tile.openstreetmap.org/{{z}}/{{x}}/{{y}}.png',
                {{maxZoom: 18,   attribution: osm_Attr}});
        var ESRI =    L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{{z}}/{{y}}/{{x}}',
                {{maxZoom: 18,   attribution: esri_Attr}});
        var ESRI_NatGeo  = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{{z}}/{{y}}/{{x}}', {{
                attribution: 'Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC',
                maxZoom: 16 }});

        var Stamen_Terrain = L.tileLayer('https://stamen-tiles-{{s}}.a.ssl.fastly.net/terrain/{{z}}/{{x}}/{{y}}{{r}}.{{ext}}', {{
                attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                subdomains: 'abcd',
                minZoom: 0,
                maxZoom: 18,
                ext: 'png' }});
        var Stamen_Toner = L.tileLayer('https://stamen-tiles-{{s}}.a.ssl.fastly.net/toner/{{z}}/{{x}}/{{y}}{{r}}.{{ext}}', {{
                attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                subdomains: 'abcd', minZoom: 0, maxZoom: 20, ext: 'png' }});

        var OpenTopoMap = L.tileLayer('https://{{s}}.tile.opentopomap.org/{{z}}/{{x}}/{{y}}.png', {{
                maxZoom: 17,
                attribution: 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'
                }});

        var map = L.map('map', {{
            center: [{center_lat}, {center_lon}],
            zoom: 6,
            layers: [normal,{layer_names}]
        }});

        var baseLayers = {{
            "OpenstreetMap": normal,
            "ESRI": ESRI,
            "ESRI Nat Geo": ESRI_NatGeo,
            "Stamen Terrain": Stamen_Terrain,
            "Black & White": Stamen_Toner,
            "Open Topo": OpenTopoMap,
        }};

        var overlays = {{
            {layer_descriptions}
        }};

        L.control.layers(baseLayers, overlays).addTo(map);
        L.Control.measureControl().addTo(map);
        var logospace= new L.Control();
        logospace.onAdd = function(map) {{
            this._div = L.DomUtil.create('div', 'logospace');
            this.update();
            return this._div;
        }};
        logospace.update = function () {{
            this._div.innerHTML = '<img src="{logo_url}" alt="{logo_alt}">';
        }};
        logospace.addTo(map);
        var txtspace= new L.Control( {{position: 'bottomleft'}} );
        txtspace.onAdd = function(map) {{
            this._div = L.DomUtil.create('div', 'txtspace');
            this.update();
            return this._div;
        }};
        txtspace.update = function () {{
            this._div.innerHTML = 'Last Update: <b>{creation_time}</b>';
        }};
        txtspace.addTo(map);
    </script>
</body>
</html>

}
