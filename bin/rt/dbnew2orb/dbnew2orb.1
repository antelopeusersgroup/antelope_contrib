.TH DBNEW2ORB 1
.SH NAME
dbnew2orb \- send new or updated database rows to an orbserver
.SH SYNOPSIS
.nf
\fBdbnew2orb \fP[-sleep \fIseconds\fP] [-pf \fIpfname\fP] [-state \fIstatefile\fP]
          [-lastid] [-wfdisc] [-prefix \fIprefix\fP] [-modified_after\fItime\fP] 
          [-v] \fIdb\fP \fIorb\fP
.fi
.SH DESCRIPTION
\fBdbnew2orb\fP watches a database for modifications and sends modified rows to an orbserver. 
It allows to transfer a database so that it can be used on the receiving side with programs 
that keep the database open like e.g. dbevents. The database can be in any database schema.
.SH OPTIONS
.IP "-sleep seconds"
\fIseconds\fP specifies the number of \fIseconds\fP to wait between iterations over all database 
tables. Defaults to 60 \fIseconds\fP.
.IP "pf pfname"
Specify a \fIpfname\fP as the parameter file name for \fBdbnew2orb\fP. Defaults to \fBdbnew2orb\fP.
.IP "state statefile"
Specify a \fIstatefile\fP used for saving and restoring the modification times (lddate) of 
the database rows. Note that due to rounding errors some rows could be retransmitted after a restart.
.IP "-prefix prefix"
This can be used to distinguish between different databases on the orbserver. This overwrites the prefix 
specified in the parameterfile.
.IP "-modified_after time"
Transfer only rows that have been modified after \fItime\fP. The default is to transfer only rows 
modified after the start of the program.
.IP "-lastid"
transfer lastid table. I cannot think of a situation where it might be safe to transfer the lastid table, therefore this 
is disabled by default.
.IP "-wfdisc"
transfer wfdisc table. Since the wfdisc table is igenerally modified frequent, this can result 
in high data volume. There is a dozen more intelligent methods to transfer waveforms within 
\fBAntelope\fP. The default is to ignore the \fBwfdisc\fP table.
.IP "-v"
verbose flag
.IP "db"
Input database.
.IP "orb"
Name of the target \fIorb\fP.
.SH "PARAMETER FILE"
The \fBdbnew2orb\fP parameter file contains parameter that control how and when modified rows are sent to the destination orbserver. Following is the default parameter file:

.in 2c
.ft CW
.nf

.ne 10

sleep   60                     #naptime between checks
check_lddate_interval   5      #check lddate every nth iteration
prefix  dbn2orb                #sourcenames <prefix>/db/<tablename>
ignore_tables   &Tbl{
}
check_tables    &Tbl{
}

.fi
.ft R
.in
.LP
Parameter definitions are as follows:
.IP sleep
This is the \fItime\fP in \fIseconds\fP to wait between iterations over all tables.
.IP check_lddate_interval
Since a check of lddate is \fItime\fP consuming, the program checks most of the times only the modification times of the database tables. But to see also modifications of existing rows, a check of the lddates is performed only every check_lddate_interval.
.IP prefix
This \fIprefix\fP can be used to distinguish between several datanase on the destination orbserver.
.IP "ignore_tables, check_tables"
List of tablenames that wil (or will not) be transferred to the orbserver.
Note that both \fBwfdisc\fP and \fBlastid\fP need to be specified on the \fIcommandline\fP.
.SH EXAMPLE
.in 2c
.ft CW
.nf

.ne 15

Export one of the example databases:

> ./dbnew2orb  -prefix db2orb -modified_after 1950-01-01 -v $antelope/../data/db/demo/demo :
dbnew2orb:  2/21/2005  20:30:30.619: 13 packet(s) sent with sourcename: db2orb/db/affiliation
dbnew2orb:  2/21/2005  20:30:30.624: 12 packet(s) sent with sourcename: db2orb/db/arrival
dbnew2orb:  2/21/2005  20:30:30.630: 9 packet(s) sent with sourcename: db2orb/db/assoc
dbnew2orb:  2/21/2005  20:30:30.634: 5 packet(s) sent with sourcename: db2orb/db/netmag
dbnew2orb:  2/21/2005  20:30:30.637: 1 packet(s) sent with sourcename: db2orb/db/network
dbnew2orb:  2/21/2005  20:30:30.784: 1351 packet(s) sent with sourcename: db2orb/db/origin
dbnew2orb:  2/21/2005  20:30:30.800: 39 packet(s) sent with sourcename: db2orb/db/sensor
dbnew2orb:  2/21/2005  20:30:30.804: 13 packet(s) sent with sourcename: db2orb/db/site
dbnew2orb:  2/21/2005  20:30:30.811: 39 packet(s) sent with sourcename: db2orb/db/sitechan
dbnew2orb:  2/21/2005  20:30:30.814: 4 packet(s) sent with sourcename: db2orb/db/stamag

save the demo database on the other side:
> orb2dbt -select "db2orb.*" -overwrite : copy-of-demo

.fi
.ft R
.in
.SH "BUGS AND CAVEATS"
The current version of the program transfers external files, i.e. those referenced by the fields dir and dfile \fIdfile\fP. 
This could result in large data volume transferred.
It can happen that orb2orb refuses to transfer database rows whose format is unknown on the instance transferring the data. This can be solved by installing database extensions on the transmitting machine as well, not only on the sending and receiving sides.
Sometimes one might see strange log entries coming from orb2dbt on the receiving side. While this looks
frigthening, it still seems to work fine.

.SH "SEE ALSO"
.nf
dbt2orb(1),orb2dbt(1).
.fi
.SH AUTHOR
Nikolaus Horn, 2005,2013
.br
ZAMG / Vienna, nikolaus.horn@zamg.ac.at
.\" $Id$
